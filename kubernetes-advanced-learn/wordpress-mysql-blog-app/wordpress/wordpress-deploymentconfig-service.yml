apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: wordpress
  name: blogapp
  namespace: myblog
spec:
  replicas: 3
  selector:
    app: wordpress
    deploymentconfig: blogapp
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        app: wordpress
        deploymentconfig: blogapp
    spec:
      containers:
      - image: registry.lab.example.com/openshift3/wordpress:latest
        # pull image from quay.io/alberthua/wordpress:php-v5.6.30
        imagePullPolicy: IfNotPresent
        name: wordpress
        env:
        - name: WORDPRESS_DB_USER
          value: wp_user
        - name: WORDPRESS_DB_PASSWORD
          value: wp_pass
        - name: WORDPRESS_DB_NAME
          value: wp_db
        - name: WORDPRESS_DB_HOST
          value: mysql
          # this is the name of the mysql service fronting the mysql pod in the same namespace
          # expands to mysql.<namespace>.svc.cluster.local - where <namespace> is the current namespace
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: claim-wp
      serviceAccountName: wp-admin
      serviceAccount: wp-admin
      # wp-admin serviceaccount with anyuid scc to privileged escalation in openshift pod
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata: 
  labels: 
    name: wpfrontend
  name: wpfrontend
spec: 
  ports:
    # the port that this service should serve on
    - port: 80
      protocol: TCP
      targetPort: 80
  # label keys and values that must match in order to receive traffic for this service
  selector: 
    app: wordpress
  type: LoadBalancer
